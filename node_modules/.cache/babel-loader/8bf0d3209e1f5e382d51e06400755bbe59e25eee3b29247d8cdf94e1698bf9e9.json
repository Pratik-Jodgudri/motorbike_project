{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './cartAPI';\nconst initialState = {\n  value: 0,\n  status: 'idle'\n};\nexport const incrementAsync = createAsyncThunk('counter/fetchCount', async amount => {\n  const response = await fetchCount(amount);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(incrementAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(incrementAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.value += action.payload;\n    });\n  }\n});\nexport const {\n  increment\n} = counterSlice.actions;\nexport const selectCount = state => state.counter.value;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchCount","initialState","value","status","incrementAsync","amount","response","data","counterSlice","name","reducers","increment","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","actions","selectCount","counter","reducer"],"sources":["F:/Web development course/MERN STACK - ETHNUS/Final Project/e-commerce/motorbike_project/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCount } from './cartAPI';\r\n\r\nconst initialState = {\r\n    value: 0,\r\n    status: 'idle',\r\n};\r\n\r\nexport const incrementAsync = createAsyncThunk(\r\n    'counter/fetchCount',\r\n    async (amount) => {\r\n        const response = await fetchCount(amount);\r\n        // The value we return becomes the `fulfilled` action payload\r\n        return response.data;\r\n    }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state) => {\r\n            state.value += 1;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(incrementAsync.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(incrementAsync.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.value += action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { increment } = counterSlice.actions;\r\n\r\nexport const selectCount = (state) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,WAAW;AAEtC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGN,gBAAgB,CAC1C,oBAAoB,EACpB,MAAOO,MAAM,IAAK;EACd,MAAMC,QAAQ,GAAG,MAAMN,UAAU,CAACK,MAAM,CAAC;EACzC;EACA,OAAOC,QAAQ,CAACC,IAAI;AACxB,CACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGT,WAAW,CAAC;EACpCU,IAAI,EAAE,SAAS;EACfR,YAAY;EACZS,QAAQ,EAAE;IACNC,SAAS,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACV,KAAK,IAAI,CAAC;IACpB;EACJ,CAAC;EACDW,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACX,cAAc,CAACY,OAAO,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACT,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDY,OAAO,CAACX,cAAc,CAACa,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAClDN,KAAK,CAACT,MAAM,GAAG,MAAM;MACrBS,KAAK,CAACV,KAAK,IAAIgB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAU,CAAC,GAAGH,YAAY,CAACY,OAAO;AAEjD,OAAO,MAAMC,WAAW,GAAIT,KAAK,IAAKA,KAAK,CAACU,OAAO,CAACpB,KAAK;AAEzD,eAAeM,YAAY,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}