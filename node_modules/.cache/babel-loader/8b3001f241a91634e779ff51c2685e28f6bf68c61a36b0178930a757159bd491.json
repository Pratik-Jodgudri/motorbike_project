{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts, fetchProductsByFilters } from './productAPI';\nconst initialState = {\n  products: [],\n  status: 'idle',\n  totalItems: 0\n};\nexport const fetchAllProductsAsync = createAsyncThunk('product/fetchAllProducts', async () => {\n  const response = await fetchAllProducts();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchProductsByFiltersAsync = createAsyncThunk('product/fetchProductsByFilters', async ({\n  filter,\n  sort,\n  pagination\n}) => {\n  const response = await fetchProductsByFilters(filter, sort, pagination);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAllProductsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload;\n    }).addCase(fetchProductsByFiltersAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload;\n    });\n  }\n});\nexport const {\n  increment\n} = productSlice.actions;\nexport const selectAllProducts = state => state.product.products;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAllProducts","fetchProductsByFilters","initialState","products","status","totalItems","fetchAllProductsAsync","response","data","fetchProductsByFiltersAsync","filter","sort","pagination","productSlice","name","reducers","increment","state","value","extraReducers","builder","addCase","pending","fulfilled","action","payload","actions","selectAllProducts","product","reducer"],"sources":["F:/Web development course/MERN STACK - ETHNUS/Final Project/e-commerce/motorbike_project/src/features/product/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchAllProducts,fetchProductsByFilters } from './productAPI';\r\n\r\nconst initialState = {\r\n  products: [],\r\n  status: 'idle',\r\n  totalItems:0\r\n};\r\n\r\n\r\nexport const fetchAllProductsAsync = createAsyncThunk(\r\n  'product/fetchAllProducts',\r\n  async () => {\r\n    const response = await fetchAllProducts();\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\nexport const fetchProductsByFiltersAsync = createAsyncThunk(\r\n  'product/fetchProductsByFilters',\r\n  async ({filter,sort,pagination}) => {\r\n    const response = await fetchProductsByFilters(filter,sort,pagination);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const productSlice = createSlice({\r\n  name: 'product',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchAllProductsAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.products = action.payload;\r\n      })\r\n      .addCase(fetchProductsByFiltersAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.products = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment } = productSlice.actions;\r\n\r\nexport const selectAllProducts = (state) => state.product.products;\r\n\r\nexport default productSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,gBAAgB,EAACC,sBAAsB,QAAQ,cAAc;AAEtE,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAC;AACb,CAAC;AAGD,OAAO,MAAMC,qBAAqB,GAAGR,gBAAgB,CACnD,0BAA0B,EAC1B,YAAY;EACV,MAAMS,QAAQ,GAAG,MAAMP,gBAAgB,CAAC,CAAC;EACzC;EACA,OAAOO,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AACD,OAAO,MAAMC,2BAA2B,GAAGX,gBAAgB,CACzD,gCAAgC,EAChC,OAAO;EAACY,MAAM;EAACC,IAAI;EAACC;AAAU,CAAC,KAAK;EAClC,MAAML,QAAQ,GAAG,MAAMN,sBAAsB,CAACS,MAAM,EAACC,IAAI,EAACC,UAAU,CAAC;EACrE;EACA,OAAOL,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAID,OAAO,MAAMK,YAAY,GAAGd,WAAW,CAAC;EACtCe,IAAI,EAAE,SAAS;EACfZ,YAAY;EACZa,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACC,KAAK,IAAI,CAAC;IAClB;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,qBAAqB,CAACgB,OAAO,EAAGL,KAAK,IAAK;MACjDA,KAAK,CAACb,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAACf,qBAAqB,CAACiB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC3DP,KAAK,CAACb,MAAM,GAAG,MAAM;MACrBa,KAAK,CAACd,QAAQ,GAAGqB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDJ,OAAO,CAACZ,2BAA2B,CAACa,OAAO,EAAGL,KAAK,IAAK;MACvDA,KAAK,CAACb,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAACZ,2BAA2B,CAACc,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MACjEP,KAAK,CAACb,MAAM,GAAG,MAAM;MACrBa,KAAK,CAACd,QAAQ,GAAGqB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAU,CAAC,GAAGH,YAAY,CAACa,OAAO;AAEjD,OAAO,MAAMC,iBAAiB,GAAIV,KAAK,IAAKA,KAAK,CAACW,OAAO,CAACzB,QAAQ;AAElE,eAAeU,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}